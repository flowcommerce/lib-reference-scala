package io.flow.reference.data

import io.flow.reference.v0.models.Region

object Regions {

  val Afghanistan: Region = Region(
    id = "afg",
    name = "Afghanistan",
    countries = Seq("AFG"),
    languages = Seq("fa", "ps"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Africa: Region = Region(
    id = "africa",
    name = "Africa",
    countries = Seq(
      "AGO",
      "BDI",
      "BEN",
      "BFA",
      "BWA",
      "CAF",
      "CIV",
      "CMR",
      "COD",
      "COG",
      "COM",
      "CPV",
      "DJI",
      "DZA",
      "EGY",
      "ERI",
      "ESH",
      "ETH",
      "GAB",
      "GHA",
      "GIN",
      "GMB",
      "GNB",
      "GNQ",
      "KEN",
      "LBR",
      "LBY",
      "LSO",
      "MAR",
      "MDG",
      "MLI",
      "MOZ",
      "MRT",
      "MUS",
      "MWI",
      "MYT",
      "NAM",
      "NER",
      "NGA",
      "REU",
      "RWA",
      "SDN",
      "SEN",
      "SHN",
      "SLE",
      "SOM",
      "SSD",
      "STP",
      "SWZ",
      "SYC",
      "TCD",
      "TGO",
      "TUN",
      "TZA",
      "UGA",
      "ZAF",
      "ZMB",
      "ZWE",
    ),
    languages = Seq(
      "aa",
      "af",
      "ak",
      "am",
      "ar",
      "bm",
      "ee",
      "en",
      "es",
      "ff",
      "fr",
      "ha",
      "ig",
      "kg",
      "kj",
      "kr",
      "ln",
      "lu",
      "mg",
      "nd",
      "nr",
      "ny",
      "pt",
      "rn",
      "rw",
      "sg",
      "sn",
      "so",
      "ss",
      "st",
      "sw",
      "ta",
      "ti",
      "tn",
      "ts",
      "ve",
      "wo",
      "xh",
      "yo",
      "zu",
    ),
    currencies = Seq(
      "AOA",
      "BWP",
      "CVE",
      "DJF",
      "DZD",
      "EGP",
      "ETB",
      "EUR",
      "GHS",
      "GMD",
      "GNF",
      "KES",
      "KMF",
      "LYD",
      "MAD",
      "MUR",
      "MWK",
      "NAD",
      "NGN",
      "RWF",
      "SCR",
      "SHP",
      "SLL",
      "SOS",
      "SZL",
      "TND",
      "TZS",
      "UGX",
      "XAF",
      "XOF",
      "ZAR",
      "ZMW",
    ),
    measurementSystems = Seq("imperial", "metric"),
    timezones = Nil,
  )
  val Albania: Region = Region(
    id = "alb",
    name = "Albania",
    countries = Seq("ALB"),
    languages = Seq("sq"),
    currencies = Seq("ALL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Algeria: Region = Region(
    id = "dza",
    name = "Algeria",
    countries = Seq("DZA"),
    languages = Seq("ar"),
    currencies = Seq("DZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val AmericanSamoa: Region = Region(
    id = "asm",
    name = "American Samoa",
    countries = Seq("ASM"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Andorra: Region = Region(
    id = "and",
    name = "Andorra",
    countries = Seq("AND"),
    languages = Seq("ca"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Angola: Region = Region(
    id = "ago",
    name = "Angola",
    countries = Seq("AGO"),
    languages = Seq("kg", "kj", "pt"),
    currencies = Seq("AOA"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Anguilla: Region = Region(
    id = "aia",
    name = "Anguilla",
    countries = Seq("AIA"),
    languages = Nil,
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Antarctica: Region = Region(
    id = "ata",
    name = "Antarctica",
    countries = Seq("ATA"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val AntiguaAndBarbuda: Region = Region(
    id = "atg",
    name = "Antigua and Barbuda",
    countries = Seq("ATG"),
    languages = Seq("en"),
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Argentina: Region = Region(
    id = "arg",
    name = "Argentina",
    countries = Seq("ARG"),
    languages = Seq("es"),
    currencies = Seq("ARS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Armenia: Region = Region(
    id = "arm",
    name = "Armenia",
    countries = Seq("ARM"),
    languages = Seq("hy"),
    currencies = Seq("AMD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Aruba: Region = Region(
    id = "abw",
    name = "Aruba",
    countries = Seq("ABW"),
    languages = Seq("nl"),
    currencies = Seq("AWG"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Asia: Region = Region(
    id = "asia",
    name = "Asia",
    countries = Seq(
      "AFG",
      "ARE",
      "ARM",
      "AZE",
      "BGD",
      "BHR",
      "BRN",
      "BTN",
      "CCK",
      "CHN",
      "GEO",
      "HKG",
      "IDN",
      "IND",
      "IOT",
      "IRN",
      "IRQ",
      "ISR",
      "JOR",
      "JPN",
      "KAZ",
      "KGZ",
      "KHM",
      "KOR",
      "KWT",
      "LAO",
      "LBN",
      "LKA",
      "MAC",
      "MDV",
      "MMR",
      "MNG",
      "MYS",
      "NPL",
      "OMN",
      "PAK",
      "PHL",
      "PRK",
      "PSE",
      "QAT",
      "RKS",
      "SAU",
      "SGP",
      "SYR",
      "THA",
      "TJK",
      "TKM",
      "TUR",
      "TWN",
      "UZB",
      "VNM",
      "YEM",
    ),
    languages = Seq(
      "ar",
      "az",
      "bn",
      "dv",
      "dz",
      "en",
      "fa",
      "gu",
      "he",
      "hi",
      "hy",
      "id",
      "ja",
      "ka",
      "kk",
      "km",
      "ko",
      "ku",
      "ky",
      "lo",
      "mn",
      "ms",
      "my",
      "ne",
      "pa",
      "ps",
      "pt",
      "ru",
      "si",
      "ta",
      "te",
      "tg",
      "th",
      "tk",
      "tl",
      "tr",
      "ur",
      "uz",
      "vi",
      "zh",
    ),
    currencies = Seq(
      "AED",
      "AMD",
      "AUD",
      "AZN",
      "BDT",
      "BHD",
      "BND",
      "CNY",
      "EUR",
      "GEL",
      "HKD",
      "IDR",
      "ILS",
      "INR",
      "JOD",
      "JPY",
      "KGS",
      "KHR",
      "KRW",
      "KWD",
      "KZT",
      "LAK",
      "LBP",
      "LKR",
      "MMK",
      "MNT",
      "MOP",
      "MVR",
      "MYR",
      "NPR",
      "OMR",
      "PHP",
      "PKR",
      "QAR",
      "SAR",
      "SGD",
      "THB",
      "TRY",
      "TWD",
      "USD",
      "UZS",
      "VND",
      "YER",
    ),
    measurementSystems = Seq("imperial", "metric"),
    timezones = Seq("Asia/Chongqing"),
  )
  val Australia: Region = Region(
    id = "aus",
    name = "Australia",
    countries = Seq("AUS"),
    languages = Seq("en"),
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Australia/ACT"),
  )
  val Austria: Region = Region(
    id = "aut",
    name = "Austria",
    countries = Seq("AUT"),
    languages = Seq("de"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Azerbaijan: Region = Region(
    id = "aze",
    name = "Azerbaijan",
    countries = Seq("AZE"),
    languages = Seq("az"),
    currencies = Seq("AZN"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bahamas: Region = Region(
    id = "bhs",
    name = "Bahamas",
    countries = Seq("BHS"),
    languages = Seq("en"),
    currencies = Seq("BSD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bahrain: Region = Region(
    id = "bhr",
    name = "Bahrain",
    countries = Seq("BHR"),
    languages = Seq("ar"),
    currencies = Seq("BHD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bangladesh: Region = Region(
    id = "bgd",
    name = "Bangladesh",
    countries = Seq("BGD"),
    languages = Seq("bn"),
    currencies = Seq("BDT"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Barbados: Region = Region(
    id = "brb",
    name = "Barbados",
    countries = Seq("BRB"),
    languages = Seq("en"),
    currencies = Seq("BBD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Belarus: Region = Region(
    id = "blr",
    name = "Belarus",
    countries = Seq("BLR"),
    languages = Seq("be", "ru"),
    currencies = Seq("BYN"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Belgium: Region = Region(
    id = "bel",
    name = "Belgium",
    countries = Seq("BEL"),
    languages = Seq("de", "fr", "nl"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Belize: Region = Region(
    id = "blz",
    name = "Belize",
    countries = Seq("BLZ"),
    languages = Seq("en"),
    currencies = Seq("BZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Benin: Region = Region(
    id = "ben",
    name = "Benin",
    countries = Seq("BEN"),
    languages = Seq("ff", "fr", "yo"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bermuda: Region = Region(
    id = "bmu",
    name = "Bermuda",
    countries = Seq("BMU"),
    languages = Nil,
    currencies = Seq("BMD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bhutan: Region = Region(
    id = "btn",
    name = "Bhutan",
    countries = Seq("BTN"),
    languages = Seq("dz"),
    currencies = Seq("INR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bolivia: Region = Region(
    id = "bol",
    name = "Bolivia",
    countries = Seq("BOL"),
    languages = Seq("ay", "es", "gn", "qu"),
    currencies = Seq("BOB"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BonaireSintEustatiusAndSaba: Region = Region(
    id = "bes",
    name = "Bonaire, Sint Eustatius and Saba",
    countries = Seq("BES"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BosniaAndHerzegovina: Region = Region(
    id = "bih",
    name = "Bosnia and Herzegovina",
    countries = Seq("BIH"),
    languages = Seq("bs", "hr", "sr"),
    currencies = Seq("BAM"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Botswana: Region = Region(
    id = "bwa",
    name = "Botswana",
    countries = Seq("BWA"),
    languages = Seq("en", "tn"),
    currencies = Seq("BWP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BouvetIsland: Region = Region(
    id = "bvt",
    name = "Bouvet Island",
    countries = Seq("BVT"),
    languages = Nil,
    currencies = Seq("NOK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Brazil: Region = Region(
    id = "bra",
    name = "Brazil",
    countries = Seq("BRA"),
    languages = Seq("pt"),
    currencies = Seq("BRL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BritishIndianOceanTerritory: Region = Region(
    id = "iot",
    name = "British Indian Ocean Territory",
    countries = Seq("IOT"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BritishVirginIslands: Region = Region(
    id = "vgb",
    name = "British Virgin Islands",
    countries = Seq("VGB"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BruneiDarussalam: Region = Region(
    id = "brn",
    name = "Brunei Darussalam",
    countries = Seq("BRN"),
    languages = Seq("ms"),
    currencies = Seq("BND"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Bulgaria: Region = Region(
    id = "bgr",
    name = "Bulgaria",
    countries = Seq("BGR"),
    languages = Seq("bg"),
    currencies = Seq("BGN"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val BurkinaFaso: Region = Region(
    id = "bfa",
    name = "Burkina Faso",
    countries = Seq("BFA"),
    languages = Seq("ff", "fr"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Burundi: Region = Region(
    id = "bdi",
    name = "Burundi",
    countries = Seq("BDI"),
    languages = Seq("fr", "rn"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val CaboVerde: Region = Region(
    id = "cpv",
    name = "Cabo Verde",
    countries = Seq("CPV"),
    languages = Seq("pt"),
    currencies = Seq("CVE"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Cambodia: Region = Region(
    id = "khm",
    name = "Cambodia",
    countries = Seq("KHM"),
    languages = Seq("km"),
    currencies = Seq("KHR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Cameroon: Region = Region(
    id = "cmr",
    name = "Cameroon",
    countries = Seq("CMR"),
    languages = Seq("en", "fr"),
    currencies = Seq("XAF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Canada: Region = Region(
    id = "can",
    name = "Canada",
    countries = Seq("CAN"),
    languages = Seq("en", "fr"),
    currencies = Seq("CAD"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Canada/Eastern"),
  )
  val CaymanIslands: Region = Region(
    id = "cym",
    name = "Cayman Islands",
    countries = Seq("CYM"),
    languages = Nil,
    currencies = Seq("KYD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val CentralAfricanRepublic: Region = Region(
    id = "caf",
    name = "Central African Republic",
    countries = Seq("CAF"),
    languages = Seq("fr", "sg"),
    currencies = Seq("XAF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Chad: Region = Region(
    id = "tcd",
    name = "Chad",
    countries = Seq("TCD"),
    languages = Seq("ar", "fr"),
    currencies = Seq("XAF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Chile: Region = Region(
    id = "chl",
    name = "Chile",
    countries = Seq("CHL"),
    languages = Seq("es"),
    currencies = Seq("CLP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val China: Region = Region(
    id = "chn",
    name = "China",
    countries = Seq("CHN"),
    languages = Seq("zh"),
    currencies = Seq("CNY"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Asia/Chongqing"),
  )
  val ChristmasIsland: Region = Region(
    id = "cxr",
    name = "Christmas Island",
    countries = Seq("CXR"),
    languages = Nil,
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val CocosKeelingIslands: Region = Region(
    id = "cck",
    name = "Cocos (Keeling) Islands",
    countries = Seq("CCK"),
    languages = Nil,
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Colombia: Region = Region(
    id = "col",
    name = "Colombia",
    countries = Seq("COL"),
    languages = Seq("es"),
    currencies = Seq("COP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Comoros: Region = Region(
    id = "com",
    name = "Comoros",
    countries = Seq("COM"),
    languages = Seq("ar", "fr"),
    currencies = Seq("KMF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Congo: Region = Region(
    id = "cog",
    name = "Congo",
    countries = Seq("COG"),
    languages = Seq("fr", "kg", "ln"),
    currencies = Seq("XAF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val CookIslands: Region = Region(
    id = "cok",
    name = "Cook Islands",
    countries = Seq("COK"),
    languages = Nil,
    currencies = Seq("NZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val CostaRica: Region = Region(
    id = "cri",
    name = "Costa Rica",
    countries = Seq("CRI"),
    languages = Seq("es"),
    currencies = Seq("CRC"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Croatia: Region = Region(
    id = "hrv",
    name = "Croatia",
    countries = Seq("HRV"),
    languages = Seq("hr", "it"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Cuba: Region = Region(
    id = "cub",
    name = "Cuba",
    countries = Seq("CUB"),
    languages = Seq("es"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Curaçao: Region = Region(
    id = "cuw",
    name = "Curaçao",
    countries = Seq("CUW"),
    languages = Seq("en", "nl"),
    currencies = Seq("ANG", "XCG"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Cyprus: Region = Region(
    id = "cyp",
    name = "Cyprus",
    countries = Seq("CYP"),
    languages = Seq("el", "tr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Czechia: Region = Region(
    id = "cze",
    name = "Czechia",
    countries = Seq("CZE"),
    languages = Seq("cs", "sk"),
    currencies = Seq("CZK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val CôteDIvoire: Region = Region(
    id = "civ",
    name = "Côte d'Ivoire",
    countries = Seq("CIV"),
    languages = Seq("fr"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val DemocraticPeopleSRepublicOfKorea: Region = Region(
    id = "prk",
    name = "Democratic People's Republic of Korea",
    countries = Seq("PRK"),
    languages = Seq("ko"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val DemocraticRepublicOfTheCongo: Region = Region(
    id = "cod",
    name = "Democratic Republic of the Congo",
    countries = Seq("COD"),
    languages = Seq("fr", "kg", "ln", "lu", "sw"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Denmark: Region = Region(
    id = "dnk",
    name = "Denmark",
    countries = Seq("DNK"),
    languages = Seq("da"),
    currencies = Seq("DKK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Djibouti: Region = Region(
    id = "dji",
    name = "Djibouti",
    countries = Seq("DJI"),
    languages = Seq("aa", "ar", "fr", "so"),
    currencies = Seq("DJF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Dominica: Region = Region(
    id = "dma",
    name = "Dominica",
    countries = Seq("DMA"),
    languages = Seq("en"),
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val DominicanRepublic: Region = Region(
    id = "dom",
    name = "Dominican Republic",
    countries = Seq("DOM"),
    languages = Seq("es"),
    currencies = Seq("DOP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Ecuador: Region = Region(
    id = "ecu",
    name = "Ecuador",
    countries = Seq("ECU"),
    languages = Seq("es"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Egypt: Region = Region(
    id = "egy",
    name = "Egypt",
    countries = Seq("EGY"),
    languages = Seq("ar"),
    currencies = Seq("EGP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val ElSalvador: Region = Region(
    id = "slv",
    name = "El Salvador",
    countries = Seq("SLV"),
    languages = Seq("es"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val EquatorialGuinea: Region = Region(
    id = "gnq",
    name = "Equatorial Guinea",
    countries = Seq("GNQ"),
    languages = Seq("es", "fr", "pt"),
    currencies = Seq("XAF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Eritrea: Region = Region(
    id = "eri",
    name = "Eritrea",
    countries = Seq("ERI"),
    languages = Seq("ar", "en", "ti"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Estonia: Region = Region(
    id = "est",
    name = "Estonia",
    countries = Seq("EST"),
    languages = Seq("et"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Eswatini: Region = Region(
    id = "swz",
    name = "Eswatini",
    countries = Seq("SWZ"),
    languages = Seq("en", "ss"),
    currencies = Seq("SZL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Ethiopia: Region = Region(
    id = "eth",
    name = "Ethiopia",
    countries = Seq("ETH"),
    languages = Seq("am"),
    currencies = Seq("ETB"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Europe: Region = Region(
    id = "europe",
    name = "Europe",
    countries = Seq(
      "ALA",
      "ALB",
      "AND",
      "AUT",
      "BEL",
      "BGR",
      "BIH",
      "BLR",
      "CHE",
      "CYP",
      "CZE",
      "DEU",
      "DNK",
      "ESP",
      "EST",
      "FIN",
      "FRA",
      "FRO",
      "GBR",
      "GGY",
      "GIB",
      "GRC",
      "HRV",
      "HUN",
      "IMN",
      "IRL",
      "ISL",
      "ITA",
      "JEY",
      "LIE",
      "LTU",
      "LUX",
      "LVA",
      "MCO",
      "MDA",
      "MKD",
      "MLT",
      "MNE",
      "NLD",
      "NOR",
      "POL",
      "PRT",
      "ROU",
      "RUS",
      "SJM",
      "SMR",
      "SRB",
      "SVK",
      "SVN",
      "SWE",
      "UKR",
      "VAT",
    ),
    languages = Seq(
      "be",
      "bg",
      "bs",
      "ca",
      "cs",
      "cy",
      "da",
      "de",
      "el",
      "en",
      "es",
      "et",
      "fi",
      "fr",
      "ga",
      "hr",
      "hu",
      "is",
      "it",
      "la",
      "lb",
      "lt",
      "lv",
      "mk",
      "mt",
      "nb",
      "nl",
      "nn",
      "no",
      "pl",
      "pt",
      "rm",
      "ro",
      "ru",
      "sk",
      "sl",
      "sq",
      "sr",
      "sv",
      "tr",
      "uk",
    ),
    currencies = Seq(
      "ALL",
      "BAM",
      "BGN",
      "BYN",
      "CHF",
      "CZK",
      "DKK",
      "EUR",
      "GBP",
      "GIP",
      "HRK",
      "HUF",
      "ISK",
      "MDL",
      "NOK",
      "PLN",
      "RON",
      "RSD",
      "RUB",
      "SEK",
      "UAH",
    ),
    measurementSystems = Seq("metric"),
    timezones = Seq("Africa/Algiers", "GMT"),
  )
  val EuropeanEconomicArea: Region = Region(
    id = "europeaneconomicarea",
    name = "European Economic Area",
    countries = Seq(
      "AUT",
      "BEL",
      "BGR",
      "HRV",
      "CYP",
      "CZE",
      "DNK",
      "EST",
      "FIN",
      "FRA",
      "DEU",
      "GRC",
      "HUN",
      "IRL",
      "ITA",
      "LVA",
      "LTU",
      "LUX",
      "MLT",
      "NLD",
      "POL",
      "PRT",
      "ROU",
      "SVK",
      "SVN",
      "ESP",
      "SWE",
      "ISL",
      "LIE",
      "NOR",
    ),
    languages = Seq(
      "bg",
      "cs",
      "da",
      "de",
      "el",
      "en",
      "es",
      "et",
      "fi",
      "fr",
      "ga",
      "hr",
      "hu",
      "is",
      "it",
      "lb",
      "lt",
      "lv",
      "mt",
      "nb",
      "nl",
      "nn",
      "no",
      "pl",
      "pt",
      "ro",
      "sk",
      "sl",
      "sv",
      "tr",
    ),
    currencies = Seq("BGN", "CHF", "CZK", "DKK", "EUR", "HRK", "HUF", "ISK", "NOK", "PLN", "RON", "SEK"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Africa/Algiers", "GMT"),
  )
  val EuropeanUnion: Region = Region(
    id = "europeanunion",
    name = "European Union",
    countries = Seq(
      "AUT",
      "BEL",
      "BGR",
      "HRV",
      "CYP",
      "CZE",
      "DNK",
      "EST",
      "FIN",
      "FRA",
      "DEU",
      "GRC",
      "HUN",
      "IRL",
      "ITA",
      "LVA",
      "LTU",
      "LUX",
      "MLT",
      "NLD",
      "POL",
      "PRT",
      "ROU",
      "SVK",
      "SVN",
      "ESP",
      "SWE",
    ),
    languages = Seq(
      "bg",
      "cs",
      "da",
      "de",
      "el",
      "en",
      "es",
      "et",
      "fi",
      "fr",
      "ga",
      "hr",
      "hu",
      "it",
      "lb",
      "lt",
      "lv",
      "mt",
      "nl",
      "pl",
      "pt",
      "ro",
      "sk",
      "sl",
      "sv",
      "tr",
    ),
    currencies = Seq("BGN", "CZK", "DKK", "EUR", "HRK", "HUF", "PLN", "RON", "SEK"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Africa/Algiers", "GMT"),
  )
  val Eurozone: Region = Region(
    id = "eurozone",
    name = "Eurozone",
    countries = Seq(
      "AUT",
      "BEL",
      "CYP",
      "EST",
      "FIN",
      "FRA",
      "DEU",
      "GRC",
      "HRV",
      "IRL",
      "ITA",
      "LVA",
      "LTU",
      "LUX",
      "MLT",
      "NLD",
      "PRT",
      "SVK",
      "SVN",
      "ESP",
    ),
    languages = Seq(
      "cs",
      "de",
      "el",
      "en",
      "es",
      "et",
      "fi",
      "fr",
      "ga",
      "hr",
      "it",
      "lb",
      "lt",
      "lv",
      "mt",
      "nl",
      "pt",
      "sk",
      "sl",
      "sv",
      "tr",
    ),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Africa/Algiers", "GMT"),
  )
  val FalklandIslands: Region = Region(
    id = "flk",
    name = "Falkland Islands",
    countries = Seq("FLK"),
    languages = Nil,
    currencies = Seq("FKP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val FaroeIslands: Region = Region(
    id = "fro",
    name = "Faroe Islands",
    countries = Seq("FRO"),
    languages = Seq("da"),
    currencies = Seq("DKK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Fiji: Region = Region(
    id = "fji",
    name = "Fiji",
    countries = Seq("FJI"),
    languages = Seq("en", "fj", "hi", "ur"),
    currencies = Seq("FJD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Finland: Region = Region(
    id = "fin",
    name = "Finland",
    countries = Seq("FIN"),
    languages = Seq("fi", "sv"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val France: Region = Region(
    id = "fra",
    name = "France",
    countries = Seq("FRA"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Africa/Algiers"),
  )
  val FrenchGuiana: Region = Region(
    id = "guf",
    name = "French Guiana",
    countries = Seq("GUF"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val FrenchPolynesia: Region = Region(
    id = "pyf",
    name = "French Polynesia",
    countries = Seq("PYF"),
    languages = Seq("fr"),
    currencies = Seq("XPF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val FrenchSouthernTerritories: Region = Region(
    id = "atf",
    name = "French Southern Territories",
    countries = Seq("ATF"),
    languages = Nil,
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Gabon: Region = Region(
    id = "gab",
    name = "Gabon",
    countries = Seq("GAB"),
    languages = Seq("fr"),
    currencies = Seq("XAF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Gambia: Region = Region(
    id = "gmb",
    name = "Gambia",
    countries = Seq("GMB"),
    languages = Seq("en"),
    currencies = Seq("GMD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Georgia: Region = Region(
    id = "geo",
    name = "Georgia",
    countries = Seq("GEO"),
    languages = Seq("ka"),
    currencies = Seq("GEL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Germany: Region = Region(
    id = "deu",
    name = "Germany",
    countries = Seq("DEU"),
    languages = Seq("de"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Ghana: Region = Region(
    id = "gha",
    name = "Ghana",
    countries = Seq("GHA"),
    languages = Seq("ak", "ee", "en"),
    currencies = Seq("GHS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Gibraltar: Region = Region(
    id = "gib",
    name = "Gibraltar",
    countries = Seq("GIB"),
    languages = Nil,
    currencies = Seq("GIP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Greece: Region = Region(
    id = "grc",
    name = "Greece",
    countries = Seq("GRC"),
    languages = Seq("el"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Greenland: Region = Region(
    id = "grl",
    name = "Greenland",
    countries = Seq("GRL"),
    languages = Nil,
    currencies = Seq("DKK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Grenada: Region = Region(
    id = "grd",
    name = "Grenada",
    countries = Seq("GRD"),
    languages = Seq("en"),
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Guadeloupe: Region = Region(
    id = "glp",
    name = "Guadeloupe",
    countries = Seq("GLP"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Guam: Region = Region(
    id = "gum",
    name = "Guam",
    countries = Seq("GUM"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Guatemala: Region = Region(
    id = "gtm",
    name = "Guatemala",
    countries = Seq("GTM"),
    languages = Seq("es"),
    currencies = Seq("GTQ"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Guernsey: Region = Region(
    id = "ggy",
    name = "Guernsey",
    countries = Seq("GGY"),
    languages = Nil,
    currencies = Seq("GBP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Guinea: Region = Region(
    id = "gin",
    name = "Guinea",
    countries = Seq("GIN"),
    languages = Seq("fr"),
    currencies = Seq("GNF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val GuineaMinusBissau: Region = Region(
    id = "gnb",
    name = "Guinea-Bissau",
    countries = Seq("GNB"),
    languages = Seq("pt"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Guyana: Region = Region(
    id = "guy",
    name = "Guyana",
    countries = Seq("GUY"),
    languages = Seq("en"),
    currencies = Seq("GYD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Haiti: Region = Region(
    id = "hti",
    name = "Haiti",
    countries = Seq("HTI"),
    languages = Seq("fr", "ht"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val HeardIslandAndMcdonaldIslands: Region = Region(
    id = "hmd",
    name = "Heard Island and McDonald Islands",
    countries = Seq("HMD"),
    languages = Nil,
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val HolySee: Region = Region(
    id = "vat",
    name = "Holy See",
    countries = Seq("VAT"),
    languages = Seq("it", "la"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Honduras: Region = Region(
    id = "hnd",
    name = "Honduras",
    countries = Seq("HND"),
    languages = Seq("es"),
    currencies = Seq("HNL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val HongKong: Region = Region(
    id = "hkg",
    name = "Hong Kong",
    countries = Seq("HKG"),
    languages = Seq("en", "zh"),
    currencies = Seq("HKD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Hungary: Region = Region(
    id = "hun",
    name = "Hungary",
    countries = Seq("HUN"),
    languages = Seq("hu"),
    currencies = Seq("HUF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Iceland: Region = Region(
    id = "isl",
    name = "Iceland",
    countries = Seq("ISL"),
    languages = Seq("is"),
    currencies = Seq("ISK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val India: Region = Region(
    id = "ind",
    name = "India",
    countries = Seq("IND"),
    languages = Seq("bn", "en", "gu", "hi", "pa", "ta", "te"),
    currencies = Seq("INR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Indonesia: Region = Region(
    id = "idn",
    name = "Indonesia",
    countries = Seq("IDN"),
    languages = Seq("id", "ms"),
    currencies = Seq("IDR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val IranIslamicRepublicOf: Region = Region(
    id = "irn",
    name = "Iran (Islamic Republic of)",
    countries = Seq("IRN"),
    languages = Seq("fa"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Iraq: Region = Region(
    id = "irq",
    name = "Iraq",
    countries = Seq("IRQ"),
    languages = Seq("ar", "ku"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Ireland: Region = Region(
    id = "irl",
    name = "Ireland",
    countries = Seq("IRL"),
    languages = Seq("en", "ga"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Seq("GMT"),
  )
  val IsleOfMan: Region = Region(
    id = "imn",
    name = "Isle of Man",
    countries = Seq("IMN"),
    languages = Nil,
    currencies = Seq("GBP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Israel: Region = Region(
    id = "isr",
    name = "Israel",
    countries = Seq("ISR"),
    languages = Seq("ar", "he"),
    currencies = Seq("ILS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Italy: Region = Region(
    id = "ita",
    name = "Italy",
    countries = Seq("ITA"),
    languages = Seq("de", "fr", "it"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Jamaica: Region = Region(
    id = "jam",
    name = "Jamaica",
    countries = Seq("JAM"),
    languages = Seq("en"),
    currencies = Seq("JMD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Japan: Region = Region(
    id = "jpn",
    name = "Japan",
    countries = Seq("JPN"),
    languages = Seq("ja"),
    currencies = Seq("JPY"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Jersey: Region = Region(
    id = "jey",
    name = "Jersey",
    countries = Seq("JEY"),
    languages = Seq("fr"),
    currencies = Seq("GBP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Jordan: Region = Region(
    id = "jor",
    name = "Jordan",
    countries = Seq("JOR"),
    languages = Seq("ar"),
    currencies = Seq("JOD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Kazakhstan: Region = Region(
    id = "kaz",
    name = "Kazakhstan",
    countries = Seq("KAZ"),
    languages = Seq("kk", "ru"),
    currencies = Seq("KZT"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Kenya: Region = Region(
    id = "ken",
    name = "Kenya",
    countries = Seq("KEN"),
    languages = Seq("en", "sw"),
    currencies = Seq("KES"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Kiribati: Region = Region(
    id = "kir",
    name = "Kiribati",
    countries = Seq("KIR"),
    languages = Seq("en"),
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Kosovo: Region = Region(
    id = "rks",
    name = "Kosovo",
    countries = Seq("RKS"),
    languages = Nil,
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Kuwait: Region = Region(
    id = "kwt",
    name = "Kuwait",
    countries = Seq("KWT"),
    languages = Seq("ar"),
    currencies = Seq("KWD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Kyrgyzstan: Region = Region(
    id = "kgz",
    name = "Kyrgyzstan",
    countries = Seq("KGZ"),
    languages = Seq("ky", "ru"),
    currencies = Seq("KGS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val LaoPeopleSDemocraticRepublic: Region = Region(
    id = "lao",
    name = "Lao People's Democratic Republic",
    countries = Seq("LAO"),
    languages = Seq("lo"),
    currencies = Seq("LAK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Latvia: Region = Region(
    id = "lva",
    name = "Latvia",
    countries = Seq("LVA"),
    languages = Seq("lv"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Lebanon: Region = Region(
    id = "lbn",
    name = "Lebanon",
    countries = Seq("LBN"),
    languages = Seq("ar"),
    currencies = Seq("LBP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Lesotho: Region = Region(
    id = "lso",
    name = "Lesotho",
    countries = Seq("LSO"),
    languages = Seq("en", "st"),
    currencies = Seq("ZAR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Liberia: Region = Region(
    id = "lbr",
    name = "Liberia",
    countries = Seq("LBR"),
    languages = Seq("en"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("imperial"),
    timezones = Nil,
  )
  val Libya: Region = Region(
    id = "lby",
    name = "Libya",
    countries = Seq("LBY"),
    languages = Seq("ar"),
    currencies = Seq("LYD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Liechtenstein: Region = Region(
    id = "lie",
    name = "Liechtenstein",
    countries = Seq("LIE"),
    languages = Seq("de"),
    currencies = Seq("CHF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Lithuania: Region = Region(
    id = "ltu",
    name = "Lithuania",
    countries = Seq("LTU"),
    languages = Seq("lt"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Luxembourg: Region = Region(
    id = "lux",
    name = "Luxembourg",
    countries = Seq("LUX"),
    languages = Seq("de", "fr", "lb"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Macau: Region = Region(
    id = "mac",
    name = "Macau",
    countries = Seq("MAC"),
    languages = Seq("pt", "zh"),
    currencies = Seq("MOP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Madagascar: Region = Region(
    id = "mdg",
    name = "Madagascar",
    countries = Seq("MDG"),
    languages = Seq("fr", "mg"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Malawi: Region = Region(
    id = "mwi",
    name = "Malawi",
    countries = Seq("MWI"),
    languages = Seq("en", "ny"),
    currencies = Seq("MWK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Malaysia: Region = Region(
    id = "mys",
    name = "Malaysia",
    countries = Seq("MYS"),
    languages = Seq("en", "ms", "ta"),
    currencies = Seq("MYR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Maldives: Region = Region(
    id = "mdv",
    name = "Maldives",
    countries = Seq("MDV"),
    languages = Seq("dv"),
    currencies = Seq("MVR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mali: Region = Region(
    id = "mli",
    name = "Mali",
    countries = Seq("MLI"),
    languages = Seq("bm", "ff", "fr"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Malta: Region = Region(
    id = "mlt",
    name = "Malta",
    countries = Seq("MLT"),
    languages = Seq("en", "mt"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val MarshallIslands: Region = Region(
    id = "mhl",
    name = "Marshall Islands",
    countries = Seq("MHL"),
    languages = Seq("en", "mh"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Martinique: Region = Region(
    id = "mtq",
    name = "Martinique",
    countries = Seq("MTQ"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mauritania: Region = Region(
    id = "mrt",
    name = "Mauritania",
    countries = Seq("MRT"),
    languages = Seq("ar"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mauritius: Region = Region(
    id = "mus",
    name = "Mauritius",
    countries = Seq("MUS"),
    languages = Seq("en", "fr", "ta"),
    currencies = Seq("MUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mayotte: Region = Region(
    id = "myt",
    name = "Mayotte",
    countries = Seq("MYT"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mexico: Region = Region(
    id = "mex",
    name = "Mexico",
    countries = Seq("MEX"),
    languages = Seq("es"),
    currencies = Seq("MXN"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Mexico/General"),
  )
  val Micronesia: Region = Region(
    id = "fsm",
    name = "Micronesia",
    countries = Seq("FSM"),
    languages = Seq("en"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Monaco: Region = Region(
    id = "mco",
    name = "Monaco",
    countries = Seq("MCO"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mongolia: Region = Region(
    id = "mng",
    name = "Mongolia",
    countries = Seq("MNG"),
    languages = Seq("mn"),
    currencies = Seq("MNT"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Montenegro: Region = Region(
    id = "mne",
    name = "Montenegro",
    countries = Seq("MNE"),
    languages = Nil,
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Montserrat: Region = Region(
    id = "msr",
    name = "Montserrat",
    countries = Seq("MSR"),
    languages = Nil,
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Morocco: Region = Region(
    id = "mar",
    name = "Morocco",
    countries = Seq("MAR"),
    languages = Seq("ar"),
    currencies = Seq("MAD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Mozambique: Region = Region(
    id = "moz",
    name = "Mozambique",
    countries = Seq("MOZ"),
    languages = Seq("pt"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Myanmar: Region = Region(
    id = "mmr",
    name = "Myanmar",
    countries = Seq("MMR"),
    languages = Seq("my"),
    currencies = Seq("MMK"),
    measurementSystems = Seq("imperial"),
    timezones = Nil,
  )
  val Namibia: Region = Region(
    id = "nam",
    name = "Namibia",
    countries = Seq("NAM"),
    languages = Seq("en"),
    currencies = Seq("NAD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Nauru: Region = Region(
    id = "nru",
    name = "Nauru",
    countries = Seq("NRU"),
    languages = Seq("en"),
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Nepal: Region = Region(
    id = "npl",
    name = "Nepal",
    countries = Seq("NPL"),
    languages = Seq("ne"),
    currencies = Seq("NPR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Netherlands: Region = Region(
    id = "nld",
    name = "Netherlands",
    countries = Seq("NLD"),
    languages = Seq("nl"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val NewCaledonia: Region = Region(
    id = "ncl",
    name = "New Caledonia",
    countries = Seq("NCL"),
    languages = Seq("fr"),
    currencies = Seq("XPF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val NewZealand: Region = Region(
    id = "nzl",
    name = "New Zealand",
    countries = Seq("NZL"),
    languages = Seq("en", "mi"),
    currencies = Seq("NZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Nicaragua: Region = Region(
    id = "nic",
    name = "Nicaragua",
    countries = Seq("NIC"),
    languages = Seq("es"),
    currencies = Seq("NIO"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Niger: Region = Region(
    id = "ner",
    name = "Niger",
    countries = Seq("NER"),
    languages = Seq("ar", "ff", "fr", "ha", "kr"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Nigeria: Region = Region(
    id = "nga",
    name = "Nigeria",
    countries = Seq("NGA"),
    languages = Seq("en", "ha", "ig", "yo"),
    currencies = Seq("NGN"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Niue: Region = Region(
    id = "niu",
    name = "Niue",
    countries = Seq("NIU"),
    languages = Nil,
    currencies = Seq("NZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val NorfolkIsland: Region = Region(
    id = "nfk",
    name = "Norfolk Island",
    countries = Seq("NFK"),
    languages = Nil,
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val NorthAmerica: Region = Region(
    id = "north-america",
    name = "North America",
    countries = Seq(
      "ABW",
      "AIA",
      "ATG",
      "BES",
      "BHS",
      "BLM",
      "BLZ",
      "BMU",
      "BRB",
      "CAN",
      "CRI",
      "CUB",
      "CUW",
      "CYM",
      "DMA",
      "DOM",
      "GLP",
      "GRD",
      "GRL",
      "GTM",
      "HND",
      "HTI",
      "JAM",
      "KNA",
      "LCA",
      "MAF",
      "MEX",
      "MSR",
      "MTQ",
      "NIC",
      "PAN",
      "PRI",
      "SLV",
      "SPM",
      "SXM",
      "TCA",
      "TTO",
      "USA",
      "VCT",
      "VGB",
      "VIR",
    ),
    languages = Seq("en", "es", "fr", "ht", "nl"),
    currencies = Seq(
      "ANG",
      "AWG",
      "BBD",
      "BMD",
      "BSD",
      "BZD",
      "CAD",
      "CRC",
      "DKK",
      "DOP",
      "EUR",
      "GTQ",
      "HNL",
      "JMD",
      "KYD",
      "MXN",
      "NIO",
      "TTD",
      "USD",
      "XCD",
      "XCG",
    ),
    measurementSystems = Seq("imperial", "metric"),
    timezones = Seq("America/Chicago", "America/Los_Angeles", "America/New_York", "Canada/Eastern", "Mexico/General"),
  )
  val NorthMacedonia: Region = Region(
    id = "mkd",
    name = "North Macedonia",
    countries = Seq("MKD"),
    languages = Seq("mk"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val NorthernMarianaIslands: Region = Region(
    id = "mnp",
    name = "Northern Mariana Islands",
    countries = Seq("MNP"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Norway: Region = Region(
    id = "nor",
    name = "Norway",
    countries = Seq("NOR"),
    languages = Seq("nb", "nn", "no"),
    currencies = Seq("NOK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Oceania: Region = Region(
    id = "oceania",
    name = "Oceania",
    countries = Seq(
      "ASM",
      "AUS",
      "COK",
      "CXR",
      "FJI",
      "FSM",
      "GUM",
      "KIR",
      "MHL",
      "MNP",
      "NCL",
      "NFK",
      "NIU",
      "NRU",
      "NZL",
      "PCN",
      "PLW",
      "PNG",
      "PYF",
      "SLB",
      "TKL",
      "TLS",
      "TON",
      "TUV",
      "UMI",
      "VUT",
      "WLF",
      "WSM",
    ),
    languages = Seq("bi", "en", "fj", "fr", "hi", "ho", "mh", "mi", "pt", "ur"),
    currencies = Seq("AUD", "FJD", "NZD", "PGK", "SBD", "TOP", "USD", "VUV", "WST", "XPF"),
    measurementSystems = Seq("metric"),
    timezones = Seq("Australia/ACT"),
  )
  val Oman: Region = Region(
    id = "omn",
    name = "Oman",
    countries = Seq("OMN"),
    languages = Seq("ar"),
    currencies = Seq("OMR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Pakistan: Region = Region(
    id = "pak",
    name = "Pakistan",
    countries = Seq("PAK"),
    languages = Seq("en", "ur"),
    currencies = Seq("PKR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Palau: Region = Region(
    id = "plw",
    name = "Palau",
    countries = Seq("PLW"),
    languages = Seq("en"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Panama: Region = Region(
    id = "pan",
    name = "Panama",
    countries = Seq("PAN"),
    languages = Seq("es"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val PapuaNewGuinea: Region = Region(
    id = "png",
    name = "Papua New Guinea",
    countries = Seq("PNG"),
    languages = Seq("en", "ho"),
    currencies = Seq("PGK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Paraguay: Region = Region(
    id = "pry",
    name = "Paraguay",
    countries = Seq("PRY"),
    languages = Seq("es", "gn"),
    currencies = Seq("PYG"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Peru: Region = Region(
    id = "per",
    name = "Peru",
    countries = Seq("PER"),
    languages = Seq("ay", "es", "qu"),
    currencies = Seq("PEN"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Philippines: Region = Region(
    id = "phl",
    name = "Philippines",
    countries = Seq("PHL"),
    languages = Seq("en", "tl"),
    currencies = Seq("PHP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Pitcairn: Region = Region(
    id = "pcn",
    name = "Pitcairn",
    countries = Seq("PCN"),
    languages = Nil,
    currencies = Seq("NZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Poland: Region = Region(
    id = "pol",
    name = "Poland",
    countries = Seq("POL"),
    languages = Seq("pl"),
    currencies = Seq("PLN"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Portugal: Region = Region(
    id = "prt",
    name = "Portugal",
    countries = Seq("PRT"),
    languages = Seq("pt"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val PuertoRico: Region = Region(
    id = "pri",
    name = "Puerto Rico",
    countries = Seq("PRI"),
    languages = Seq("es"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Qatar: Region = Region(
    id = "qat",
    name = "Qatar",
    countries = Seq("QAT"),
    languages = Seq("ar"),
    currencies = Seq("QAR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val RepublicOfKorea: Region = Region(
    id = "kor",
    name = "Republic of Korea",
    countries = Seq("KOR"),
    languages = Seq("ko"),
    currencies = Seq("KRW"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val RepublicOfMoldova: Region = Region(
    id = "mda",
    name = "Republic of Moldova",
    countries = Seq("MDA"),
    languages = Seq("ro"),
    currencies = Seq("MDL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Romania: Region = Region(
    id = "rou",
    name = "Romania",
    countries = Seq("ROU"),
    languages = Seq("ro"),
    currencies = Seq("RON"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val RussianFederation: Region = Region(
    id = "rus",
    name = "Russian Federation",
    countries = Seq("RUS"),
    languages = Seq("ru"),
    currencies = Seq("RUB"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Rwanda: Region = Region(
    id = "rwa",
    name = "Rwanda",
    countries = Seq("RWA"),
    languages = Seq("en", "fr", "rw"),
    currencies = Seq("RWF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Réunion: Region = Region(
    id = "reu",
    name = "Réunion",
    countries = Seq("REU"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintBarthélemy: Region = Region(
    id = "blm",
    name = "Saint Barthélemy",
    countries = Seq("BLM"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintHelena: Region = Region(
    id = "shn",
    name = "Saint Helena",
    countries = Seq("SHN"),
    languages = Nil,
    currencies = Seq("SHP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintKittsAndNevis: Region = Region(
    id = "kna",
    name = "Saint Kitts and Nevis",
    countries = Seq("KNA"),
    languages = Seq("en"),
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintLucia: Region = Region(
    id = "lca",
    name = "Saint Lucia",
    countries = Seq("LCA"),
    languages = Seq("en"),
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintMartin: Region = Region(
    id = "maf",
    name = "Saint Martin",
    countries = Seq("MAF"),
    languages = Nil,
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintPierreAndMiquelon: Region = Region(
    id = "spm",
    name = "Saint Pierre and Miquelon",
    countries = Seq("SPM"),
    languages = Seq("fr"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaintVincentAndTheGrenadines: Region = Region(
    id = "vct",
    name = "Saint Vincent and the Grenadines",
    countries = Seq("VCT"),
    languages = Seq("en"),
    currencies = Seq("XCD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Samoa: Region = Region(
    id = "wsm",
    name = "Samoa",
    countries = Seq("WSM"),
    languages = Seq("en"),
    currencies = Seq("WST"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SanMarino: Region = Region(
    id = "smr",
    name = "San Marino",
    countries = Seq("SMR"),
    languages = Seq("it"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaoTomeAndPrincipe: Region = Region(
    id = "stp",
    name = "Sao Tome and Principe",
    countries = Seq("STP"),
    languages = Seq("pt"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SaudiArabia: Region = Region(
    id = "sau",
    name = "Saudi Arabia",
    countries = Seq("SAU"),
    languages = Seq("ar"),
    currencies = Seq("SAR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Senegal: Region = Region(
    id = "sen",
    name = "Senegal",
    countries = Seq("SEN"),
    languages = Seq("ff", "fr", "wo"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Serbia: Region = Region(
    id = "srb",
    name = "Serbia",
    countries = Seq("SRB"),
    languages = Seq("sr"),
    currencies = Seq("RSD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Seychelles: Region = Region(
    id = "syc",
    name = "Seychelles",
    countries = Seq("SYC"),
    languages = Seq("en", "fr"),
    currencies = Seq("SCR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SierraLeone: Region = Region(
    id = "sle",
    name = "Sierra Leone",
    countries = Seq("SLE"),
    languages = Seq("en"),
    currencies = Seq("SLL"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Singapore: Region = Region(
    id = "sgp",
    name = "Singapore",
    countries = Seq("SGP"),
    languages = Seq("en", "ms", "ta", "zh"),
    currencies = Seq("SGD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SintMaarten: Region = Region(
    id = "sxm",
    name = "Sint Maarten",
    countries = Seq("SXM"),
    languages = Seq("en", "nl"),
    currencies = Seq("ANG", "XCG"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Slovakia: Region = Region(
    id = "svk",
    name = "Slovakia",
    countries = Seq("SVK"),
    languages = Seq("cs", "sk"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Slovenia: Region = Region(
    id = "svn",
    name = "Slovenia",
    countries = Seq("SVN"),
    languages = Seq("it", "sl"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SolomonIslands: Region = Region(
    id = "slb",
    name = "Solomon Islands",
    countries = Seq("SLB"),
    languages = Seq("en"),
    currencies = Seq("SBD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Somalia: Region = Region(
    id = "som",
    name = "Somalia",
    countries = Seq("SOM"),
    languages = Seq("ar", "so"),
    currencies = Seq("SOS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SouthAfrica: Region = Region(
    id = "zaf",
    name = "South Africa",
    countries = Seq("ZAF"),
    languages = Seq("af", "en", "nd", "nr", "ss", "st", "tn", "ts", "ve", "xh", "zu"),
    currencies = Seq("ZAR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SouthAmerica: Region = Region(
    id = "south-america",
    name = "South America",
    countries = Seq("ARG", "BOL", "BRA", "CHL", "COL", "ECU", "FLK", "GUF", "GUY", "PER", "PRY", "SUR", "URY", "VEN"),
    languages = Seq("ay", "en", "es", "fr", "gn", "nl", "pt", "qu"),
    currencies = Seq("ARS", "BOB", "BRL", "CLP", "COP", "EUR", "FKP", "GYD", "PEN", "PYG", "USD", "UYU", "VEF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SouthGeorgiaAndTheSouthSandwichIslands: Region = Region(
    id = "sgs",
    name = "South Georgia and the South Sandwich Islands",
    countries = Seq("SGS"),
    languages = Nil,
    currencies = Seq("GBP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SouthSudan: Region = Region(
    id = "ssd",
    name = "South Sudan",
    countries = Seq("SSD"),
    languages = Seq("en"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Spain: Region = Region(
    id = "esp",
    name = "Spain",
    countries = Seq("ESP"),
    languages = Seq("es"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SriLanka: Region = Region(
    id = "lka",
    name = "Sri Lanka",
    countries = Seq("LKA"),
    languages = Seq("en", "si", "ta"),
    currencies = Seq("LKR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val StateOfPalestine: Region = Region(
    id = "pse",
    name = "State of Palestine",
    countries = Seq("PSE"),
    languages = Nil,
    currencies = Seq("JOD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Sudan: Region = Region(
    id = "sdn",
    name = "Sudan",
    countries = Seq("SDN"),
    languages = Seq("ar", "en"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Suriname: Region = Region(
    id = "sur",
    name = "Suriname",
    countries = Seq("SUR"),
    languages = Seq("nl"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SvalbardAndJanMayenIslands: Region = Region(
    id = "sjm",
    name = "Svalbard and Jan Mayen Islands",
    countries = Seq("SJM"),
    languages = Nil,
    currencies = Seq("NOK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Sweden: Region = Region(
    id = "swe",
    name = "Sweden",
    countries = Seq("SWE"),
    languages = Seq("sv"),
    currencies = Seq("SEK"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Switzerland: Region = Region(
    id = "che",
    name = "Switzerland",
    countries = Seq("CHE"),
    languages = Seq("de", "fr", "it", "rm"),
    currencies = Seq("CHF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val SyrianArabRepublic: Region = Region(
    id = "syr",
    name = "Syrian Arab Republic",
    countries = Seq("SYR"),
    languages = Seq("ar"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Taiwan: Region = Region(
    id = "twn",
    name = "Taiwan",
    countries = Seq("TWN"),
    languages = Seq("zh"),
    currencies = Seq("TWD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Tajikistan: Region = Region(
    id = "tjk",
    name = "Tajikistan",
    countries = Seq("TJK"),
    languages = Seq("fa", "ru", "tg"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Thailand: Region = Region(
    id = "tha",
    name = "Thailand",
    countries = Seq("THA"),
    languages = Seq("th"),
    currencies = Seq("THB"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val TimorMinusLeste: Region = Region(
    id = "tls",
    name = "Timor-Leste",
    countries = Seq("TLS"),
    languages = Seq("pt"),
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Togo: Region = Region(
    id = "tgo",
    name = "Togo",
    countries = Seq("TGO"),
    languages = Seq("ee", "fr"),
    currencies = Seq("XOF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Tokelau: Region = Region(
    id = "tkl",
    name = "Tokelau",
    countries = Seq("TKL"),
    languages = Nil,
    currencies = Seq("NZD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Tonga: Region = Region(
    id = "ton",
    name = "Tonga",
    countries = Seq("TON"),
    languages = Seq("en"),
    currencies = Seq("TOP"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val TrinidadAndTobago: Region = Region(
    id = "tto",
    name = "Trinidad and Tobago",
    countries = Seq("TTO"),
    languages = Seq("en"),
    currencies = Seq("TTD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Tunisia: Region = Region(
    id = "tun",
    name = "Tunisia",
    countries = Seq("TUN"),
    languages = Seq("ar"),
    currencies = Seq("TND"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Turkey: Region = Region(
    id = "tur",
    name = "Turkey",
    countries = Seq("TUR"),
    languages = Seq("tr"),
    currencies = Seq("TRY"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Turkmenistan: Region = Region(
    id = "tkm",
    name = "Turkmenistan",
    countries = Seq("TKM"),
    languages = Seq("tk"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val TurksAndCaicosIslands: Region = Region(
    id = "tca",
    name = "Turks and Caicos Islands",
    countries = Seq("TCA"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Tuvalu: Region = Region(
    id = "tuv",
    name = "Tuvalu",
    countries = Seq("TUV"),
    languages = Seq("en"),
    currencies = Seq("AUD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Uganda: Region = Region(
    id = "uga",
    name = "Uganda",
    countries = Seq("UGA"),
    languages = Seq("en", "sw"),
    currencies = Seq("UGX"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Ukraine: Region = Region(
    id = "ukr",
    name = "Ukraine",
    countries = Seq("UKR"),
    languages = Seq("uk"),
    currencies = Seq("UAH"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val UnitedArabEmirates: Region = Region(
    id = "are",
    name = "United Arab Emirates",
    countries = Seq("ARE"),
    languages = Seq("ar"),
    currencies = Seq("AED"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val UnitedKingdom: Region = Region(
    id = "gbr",
    name = "United Kingdom",
    countries = Seq("GBR"),
    languages = Seq("cy", "en"),
    currencies = Seq("GBP"),
    measurementSystems = Seq("metric"),
    timezones = Seq("GMT"),
  )
  val UnitedRepublicOfTanzania: Region = Region(
    id = "tza",
    name = "United Republic of Tanzania",
    countries = Seq("TZA"),
    languages = Seq("en", "sw"),
    currencies = Seq("TZS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val UnitedStatesMinorOutlyingIslands: Region = Region(
    id = "umi",
    name = "United States Minor Outlying Islands",
    countries = Seq("UMI"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val UnitedStatesOfAmerica: Region = Region(
    id = "usa",
    name = "United States of America",
    countries = Seq("USA"),
    languages = Seq("en"),
    currencies = Seq("USD"),
    measurementSystems = Seq("imperial"),
    timezones = Seq("America/Chicago", "America/Los_Angeles", "America/New_York"),
  )
  val UnitedStatesVirginIslands: Region = Region(
    id = "vir",
    name = "United States Virgin Islands",
    countries = Seq("VIR"),
    languages = Nil,
    currencies = Seq("USD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Uruguay: Region = Region(
    id = "ury",
    name = "Uruguay",
    countries = Seq("URY"),
    languages = Seq("es"),
    currencies = Seq("UYU"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Uzbekistan: Region = Region(
    id = "uzb",
    name = "Uzbekistan",
    countries = Seq("UZB"),
    languages = Seq("uz"),
    currencies = Seq("UZS"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Vanuatu: Region = Region(
    id = "vut",
    name = "Vanuatu",
    countries = Seq("VUT"),
    languages = Seq("bi", "en", "fr"),
    currencies = Seq("VUV"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Venezuela: Region = Region(
    id = "ven",
    name = "Venezuela",
    countries = Seq("VEN"),
    languages = Seq("es"),
    currencies = Seq("VEF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Vietnam: Region = Region(
    id = "vnm",
    name = "Vietnam",
    countries = Seq("VNM"),
    languages = Seq("vi"),
    currencies = Seq("VND"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val WallisAndFutunaIslands: Region = Region(
    id = "wlf",
    name = "Wallis and Futuna Islands",
    countries = Seq("WLF"),
    languages = Seq("fr"),
    currencies = Seq("XPF"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val WesternSahara: Region = Region(
    id = "esh",
    name = "Western Sahara",
    countries = Seq("ESH"),
    languages = Seq("es"),
    currencies = Seq("MAD"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val World: Region = Region(
    id = "world",
    name = "World",
    countries = Seq(
      "ABW",
      "AFG",
      "AGO",
      "AIA",
      "ALA",
      "ALB",
      "AND",
      "ARE",
      "ARG",
      "ARM",
      "ASM",
      "ATA",
      "ATF",
      "ATG",
      "AUS",
      "AUT",
      "AZE",
      "BDI",
      "BEL",
      "BEN",
      "BES",
      "BFA",
      "BGD",
      "BGR",
      "BHR",
      "BHS",
      "BIH",
      "BLM",
      "BLR",
      "BLZ",
      "BMU",
      "BOL",
      "BRA",
      "BRB",
      "BRN",
      "BTN",
      "BVT",
      "BWA",
      "CAF",
      "CAN",
      "CCK",
      "CHE",
      "CHL",
      "CHN",
      "CIV",
      "CMR",
      "COD",
      "COG",
      "COK",
      "COL",
      "COM",
      "CPV",
      "CRI",
      "CUB",
      "CUW",
      "CXR",
      "CYM",
      "CYP",
      "CZE",
      "DEU",
      "DJI",
      "DMA",
      "DNK",
      "DOM",
      "DZA",
      "ECU",
      "EGY",
      "ERI",
      "ESH",
      "ESP",
      "EST",
      "ETH",
      "FIN",
      "FJI",
      "FLK",
      "FRA",
      "FRO",
      "FSM",
      "GAB",
      "GBR",
      "GEO",
      "GGY",
      "GHA",
      "GIB",
      "GIN",
      "GLP",
      "GMB",
      "GNB",
      "GNQ",
      "GRC",
      "GRD",
      "GRL",
      "GTM",
      "GUF",
      "GUM",
      "GUY",
      "HKG",
      "HMD",
      "HND",
      "HRV",
      "HTI",
      "HUN",
      "IDN",
      "IMN",
      "IND",
      "IOT",
      "IRL",
      "IRN",
      "IRQ",
      "ISL",
      "ISR",
      "ITA",
      "JAM",
      "JEY",
      "JOR",
      "JPN",
      "KAZ",
      "KEN",
      "KGZ",
      "KHM",
      "KIR",
      "KNA",
      "KOR",
      "KWT",
      "LAO",
      "LBN",
      "LBR",
      "LBY",
      "LCA",
      "LIE",
      "LKA",
      "LSO",
      "LTU",
      "LUX",
      "LVA",
      "MAC",
      "MAF",
      "MAR",
      "MCO",
      "MDA",
      "MDG",
      "MDV",
      "MEX",
      "MHL",
      "MKD",
      "MLI",
      "MLT",
      "MMR",
      "MNE",
      "MNG",
      "MNP",
      "MOZ",
      "MRT",
      "MSR",
      "MTQ",
      "MUS",
      "MWI",
      "MYS",
      "MYT",
      "NAM",
      "NCL",
      "NER",
      "NFK",
      "NGA",
      "NIC",
      "NIU",
      "NLD",
      "NOR",
      "NPL",
      "NRU",
      "NZL",
      "OMN",
      "PAK",
      "PAN",
      "PCN",
      "PER",
      "PHL",
      "PLW",
      "PNG",
      "POL",
      "PRI",
      "PRK",
      "PRT",
      "PRY",
      "PSE",
      "PYF",
      "QAT",
      "REU",
      "RKS",
      "ROU",
      "RUS",
      "RWA",
      "SAU",
      "SDN",
      "SEN",
      "SGP",
      "SGS",
      "SHN",
      "SJM",
      "SLB",
      "SLE",
      "SLV",
      "SMR",
      "SOM",
      "SPM",
      "SRB",
      "SSD",
      "STP",
      "SUR",
      "SVK",
      "SVN",
      "SWE",
      "SWZ",
      "SXM",
      "SYC",
      "SYR",
      "TCA",
      "TCD",
      "TGO",
      "THA",
      "TJK",
      "TKL",
      "TKM",
      "TLS",
      "TON",
      "TTO",
      "TUN",
      "TUR",
      "TUV",
      "TWN",
      "TZA",
      "UGA",
      "UKR",
      "UMI",
      "URY",
      "USA",
      "UZB",
      "VAT",
      "VCT",
      "VEN",
      "VGB",
      "VIR",
      "VNM",
      "VUT",
      "WLF",
      "WSM",
      "YEM",
      "ZAF",
      "ZMB",
      "ZWE",
    ),
    languages = Seq(
      "aa",
      "af",
      "ak",
      "am",
      "ar",
      "ay",
      "az",
      "be",
      "bg",
      "bi",
      "bm",
      "bn",
      "bs",
      "ca",
      "cs",
      "cy",
      "da",
      "de",
      "dv",
      "dz",
      "ee",
      "el",
      "en",
      "es",
      "et",
      "fa",
      "ff",
      "fi",
      "fj",
      "fr",
      "ga",
      "gn",
      "gu",
      "ha",
      "he",
      "hi",
      "ho",
      "hr",
      "ht",
      "hu",
      "hy",
      "id",
      "ig",
      "is",
      "it",
      "ja",
      "ka",
      "kg",
      "kj",
      "kk",
      "km",
      "ko",
      "kr",
      "ku",
      "ky",
      "la",
      "lb",
      "ln",
      "lo",
      "lt",
      "lu",
      "lv",
      "mg",
      "mh",
      "mi",
      "mk",
      "mn",
      "ms",
      "mt",
      "my",
      "nb",
      "nd",
      "ne",
      "nl",
      "nn",
      "no",
      "nr",
      "ny",
      "pa",
      "pl",
      "ps",
      "pt",
      "qu",
      "rm",
      "rn",
      "ro",
      "ru",
      "rw",
      "sg",
      "si",
      "sk",
      "sl",
      "sn",
      "so",
      "sq",
      "sr",
      "ss",
      "st",
      "sv",
      "sw",
      "ta",
      "te",
      "tg",
      "th",
      "ti",
      "tk",
      "tl",
      "tn",
      "tr",
      "ts",
      "uk",
      "ur",
      "uz",
      "ve",
      "vi",
      "wo",
      "xh",
      "yo",
      "zh",
      "zu",
    ),
    currencies = Seq(
      "AED",
      "ALL",
      "AMD",
      "ANG",
      "AOA",
      "ARS",
      "AUD",
      "AWG",
      "AZN",
      "BAM",
      "BBD",
      "BDT",
      "BGN",
      "BHD",
      "BMD",
      "BND",
      "BOB",
      "BRL",
      "BSD",
      "BWP",
      "BYN",
      "BZD",
      "CAD",
      "CHF",
      "CLP",
      "CNY",
      "COP",
      "CRC",
      "CVE",
      "CZK",
      "DJF",
      "DKK",
      "DOP",
      "DZD",
      "EGP",
      "ETB",
      "EUR",
      "FJD",
      "FKP",
      "GBP",
      "GEL",
      "GHS",
      "GIP",
      "GMD",
      "GNF",
      "GTQ",
      "GYD",
      "HKD",
      "HNL",
      "HRK",
      "HUF",
      "IDR",
      "ILS",
      "INR",
      "ISK",
      "JMD",
      "JOD",
      "JPY",
      "KES",
      "KGS",
      "KHR",
      "KMF",
      "KRW",
      "KWD",
      "KYD",
      "KZT",
      "LAK",
      "LBP",
      "LKR",
      "LYD",
      "MAD",
      "MDL",
      "MMK",
      "MNT",
      "MOP",
      "MUR",
      "MVR",
      "MWK",
      "MXN",
      "MYR",
      "NAD",
      "NGN",
      "NIO",
      "NOK",
      "NPR",
      "NZD",
      "OMR",
      "PEN",
      "PGK",
      "PHP",
      "PKR",
      "PLN",
      "PYG",
      "QAR",
      "RON",
      "RSD",
      "RUB",
      "RWF",
      "SAR",
      "SBD",
      "SCR",
      "SEK",
      "SGD",
      "SHP",
      "SLL",
      "SOS",
      "SZL",
      "THB",
      "TND",
      "TOP",
      "TRY",
      "TTD",
      "TWD",
      "TZS",
      "UAH",
      "UGX",
      "USD",
      "UYU",
      "UZS",
      "VEF",
      "VND",
      "VUV",
      "WST",
      "XAF",
      "XCD",
      "XCG",
      "XOF",
      "XPF",
      "YER",
      "ZAR",
      "ZMW",
    ),
    measurementSystems = Seq("metric", "imperial"),
    timezones = Seq(
      "Africa/Algiers",
      "America/Chicago",
      "America/Los_Angeles",
      "America/New_York",
      "Asia/Chongqing",
      "Australia/ACT",
      "Canada/Eastern",
      "GMT",
      "Mexico/General",
    ),
  )
  val Yemen: Region = Region(
    id = "yem",
    name = "Yemen",
    countries = Seq("YEM"),
    languages = Seq("ar"),
    currencies = Seq("YER"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Zambia: Region = Region(
    id = "zmb",
    name = "Zambia",
    countries = Seq("ZMB"),
    languages = Seq("en"),
    currencies = Seq("ZMW"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val Zimbabwe: Region = Region(
    id = "zwe",
    name = "Zimbabwe",
    countries = Seq("ZWE"),
    languages = Seq("en", "nd", "sn"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )
  val ÅlandIslands: Region = Region(
    id = "ala",
    name = "Åland Islands",
    countries = Seq("ALA"),
    languages = Seq("sv"),
    currencies = Seq("EUR"),
    measurementSystems = Seq("metric"),
    timezones = Nil,
  )

  val all: Seq[Region] = Seq(
    Afghanistan,
    Africa,
    Albania,
    Algeria,
    AmericanSamoa,
    Andorra,
    Angola,
    Anguilla,
    Antarctica,
    AntiguaAndBarbuda,
    Argentina,
    Armenia,
    Aruba,
    Asia,
    Australia,
    Austria,
    Azerbaijan,
    Bahamas,
    Bahrain,
    Bangladesh,
    Barbados,
    Belarus,
    Belgium,
    Belize,
    Benin,
    Bermuda,
    Bhutan,
    Bolivia,
    BonaireSintEustatiusAndSaba,
    BosniaAndHerzegovina,
    Botswana,
    BouvetIsland,
    Brazil,
    BritishIndianOceanTerritory,
    BritishVirginIslands,
    BruneiDarussalam,
    Bulgaria,
    BurkinaFaso,
    Burundi,
    CaboVerde,
    Cambodia,
    Cameroon,
    Canada,
    CaymanIslands,
    CentralAfricanRepublic,
    Chad,
    Chile,
    China,
    ChristmasIsland,
    CocosKeelingIslands,
    Colombia,
    Comoros,
    Congo,
    CookIslands,
    CostaRica,
    Croatia,
    Cuba,
    Curaçao,
    Cyprus,
    Czechia,
    CôteDIvoire,
    DemocraticPeopleSRepublicOfKorea,
    DemocraticRepublicOfTheCongo,
    Denmark,
    Djibouti,
    Dominica,
    DominicanRepublic,
    Ecuador,
    Egypt,
    ElSalvador,
    EquatorialGuinea,
    Eritrea,
    Estonia,
    Eswatini,
    Ethiopia,
    Europe,
    EuropeanEconomicArea,
    EuropeanUnion,
    Eurozone,
    FalklandIslands,
    FaroeIslands,
    Fiji,
    Finland,
    France,
    FrenchGuiana,
    FrenchPolynesia,
    FrenchSouthernTerritories,
    Gabon,
    Gambia,
    Georgia,
    Germany,
    Ghana,
    Gibraltar,
    Greece,
    Greenland,
    Grenada,
    Guadeloupe,
    Guam,
    Guatemala,
    Guernsey,
    Guinea,
    GuineaMinusBissau,
    Guyana,
    Haiti,
    HeardIslandAndMcdonaldIslands,
    HolySee,
    Honduras,
    HongKong,
    Hungary,
    Iceland,
    India,
    Indonesia,
    IranIslamicRepublicOf,
    Iraq,
    Ireland,
    IsleOfMan,
    Israel,
    Italy,
    Jamaica,
    Japan,
    Jersey,
    Jordan,
    Kazakhstan,
    Kenya,
    Kiribati,
    Kosovo,
    Kuwait,
    Kyrgyzstan,
    LaoPeopleSDemocraticRepublic,
    Latvia,
    Lebanon,
    Lesotho,
    Liberia,
    Libya,
    Liechtenstein,
    Lithuania,
    Luxembourg,
    Macau,
    Madagascar,
    Malawi,
    Malaysia,
    Maldives,
    Mali,
    Malta,
    MarshallIslands,
    Martinique,
    Mauritania,
    Mauritius,
    Mayotte,
    Mexico,
    Micronesia,
    Monaco,
    Mongolia,
    Montenegro,
    Montserrat,
    Morocco,
    Mozambique,
    Myanmar,
    Namibia,
    Nauru,
    Nepal,
    Netherlands,
    NewCaledonia,
    NewZealand,
    Nicaragua,
    Niger,
    Nigeria,
    Niue,
    NorfolkIsland,
    NorthAmerica,
    NorthMacedonia,
    NorthernMarianaIslands,
    Norway,
    Oceania,
    Oman,
    Pakistan,
    Palau,
    Panama,
    PapuaNewGuinea,
    Paraguay,
    Peru,
    Philippines,
    Pitcairn,
    Poland,
    Portugal,
    PuertoRico,
    Qatar,
    RepublicOfKorea,
    RepublicOfMoldova,
    Romania,
    RussianFederation,
    Rwanda,
    Réunion,
    SaintBarthélemy,
    SaintHelena,
    SaintKittsAndNevis,
    SaintLucia,
    SaintMartin,
    SaintPierreAndMiquelon,
    SaintVincentAndTheGrenadines,
    Samoa,
    SanMarino,
    SaoTomeAndPrincipe,
    SaudiArabia,
    Senegal,
    Serbia,
    Seychelles,
    SierraLeone,
    Singapore,
    SintMaarten,
    Slovakia,
    Slovenia,
    SolomonIslands,
    Somalia,
    SouthAfrica,
    SouthAmerica,
    SouthGeorgiaAndTheSouthSandwichIslands,
    SouthSudan,
    Spain,
    SriLanka,
    StateOfPalestine,
    Sudan,
    Suriname,
    SvalbardAndJanMayenIslands,
    Sweden,
    Switzerland,
    SyrianArabRepublic,
    Taiwan,
    Tajikistan,
    Thailand,
    TimorMinusLeste,
    Togo,
    Tokelau,
    Tonga,
    TrinidadAndTobago,
    Tunisia,
    Turkey,
    Turkmenistan,
    TurksAndCaicosIslands,
    Tuvalu,
    Uganda,
    Ukraine,
    UnitedArabEmirates,
    UnitedKingdom,
    UnitedRepublicOfTanzania,
    UnitedStatesMinorOutlyingIslands,
    UnitedStatesOfAmerica,
    UnitedStatesVirginIslands,
    Uruguay,
    Uzbekistan,
    Vanuatu,
    Venezuela,
    Vietnam,
    WallisAndFutunaIslands,
    WesternSahara,
    World,
    Yemen,
    Zambia,
    Zimbabwe,
    ÅlandIslands,
  )

}
